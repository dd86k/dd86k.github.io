/*
Base91.js
By DD~!
*/

var EncodeTable =
[ // 13 per row
    'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',
    'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',
    'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',
    'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z',
    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '!', '#', '$',
    '%', '&', '(', ')', '*', '+', ',', '.', '/', ':', ';', '<', '=',
    '>', '?', '@', '[', ']', '^', '_', '`', '{', '|', '}', '~', '"'
];

var DecodeTable =
[
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, 62, 90, 63, 64, 65, 66, -1, 67, 68, 69, 70, 71, -1, 72, 73,
    52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 74, 75, 76, 77, 78, 79,
    80, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
    15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 81, -1, 82, 83, 84,
    85, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
    41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 86, 87, 88, 89, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
    -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1
];


function eBase91(s)
{
    if (s.length == 0 || s === null)
        return "";
    
    var output = "";
    var b = 0;
    var n = 0;
    var v = 0;
    var len = s.length;
    for (var i = 0; i < len; i++)
    {
        b |= s[i].charCodeAt() << n;
        n += 8;
        if (n > 13)
        {
            v = b & 8191;
            if (v > 88)
            {
                b >>= 13;
                n -= 13;
            }
            else
            {
                v = b & 16383;
                b >>= 14;
                n -= 14;
            }
            output += EncodeTable[v % 91];
            output += EncodeTable[Math.floor(v / 91)];
        }
    }
    
    if (n != 0)
    {
        output += EncodeTable[b % 91];
        if (n > 7 || b > 90)
            output += EncodeTable[Math.floor(b / 91)];
    }
    
    return output;
}

function dBase91(s)
{
    if (s.length == 0 || s === null)
        return "";
    
    var output = "";
    var c = 0;
    var v = -1;
    var b = 0;
    var n = 0;
    var len = s.length;
    for (var i = 0; i < len; i++)
    {
        c = DecodeTable[s[i].charCodeAt()];
        if (c == -1) continue;
        if (v < 0)
        {
            v = c;
        }
        else
        {
            v += c * 91;
            b |= v << n;
            n += (v & 8191) > 88 ? 13 : 14;
            do
            {
                output += String.fromCharCode(b & 255);
                b >>= 8;
                n -= 8;
            } while (n > 7);
            v = -1;
        }
    }
    if (v + 1 != 0)
    {
        output += String.fromCharCode((b | v << n) & 255);
    }
    return output;
}